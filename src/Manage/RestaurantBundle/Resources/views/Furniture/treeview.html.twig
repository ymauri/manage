{% extends 'RestaurantBundle::frame.html.twig' %}
{% block title %} Furniture {% endblock %}
{% block body %}
    <br/>
    <div class="row">
        <input type="hidden" id="qr_result" onkeyup="updateFinder($(this))">
        <div class="col-md-4 col-sm-12">
            <div class="portlet light bordered">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="icon-folder "></i>
                        <span class="caption-subject ">Folders</span>
                    </div>
                        <div class="tools">
                            <a href="" class="collapse">
                            </a>
                        </div>
                </div>
                <div class="portlet-body" style="overflow: hidden">
                    <div class="row">
                        <div id="tree_4" class="tree-demo" style="zoom:1.3;">

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8 col-sm-12">
            <div class="portlet light bordered">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="icon-folder "></i>
                        <span class="caption-subject " id="folder_name">Furnitures</span>
                    </div>
                    <div class="actions" hidden="hidden" style="display: none;">
                        <a href="#" target="_blank" class=" btn btn-sm btn-default " data-toggle="modal" id="export" >
                            <i class="fa fa-print"></i> Export </a>
                        <a id="add_new_furniture" class="btn btn-sm btn-default easy-pie-chart-reload pull-right" href="javascript:;">
                            <i class="fa fa-plus"></i> Add new </a>
                        <a href="#modal_tree"  class=" btn btn-sm btn-default " data-toggle="modal" id="move_to" >
                            <i class="fa fa-arrows"></i> Move </a>

                    </div>
                </div>
                <div id="table_result" class="portlet-body">
                    <i>Select at least one folder to find out its furnitures.</i>
                </div>
            </div>
        </div>

    </div>

    <script src="{{ asset('global/plugins/jstree/dist/jstree.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('admin/pages/scripts/ui-tree.js') }}" type="text/javascript"></script>
    <script type="text/javascript" src="{{ asset('global/plugins/datatables/media/js/jquery.dataTables.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js') }}"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.debug.js" integrity="sha384-NaWTHo/8YCBYJ59830LTz/P4aQZK1sS0SneOgAvhsIl3zBu8r9RevNg5lHCHAuQ/" crossorigin="anonymous"></script>
    <script>
        var UITree = function () {
            var ajaxTree = function () {

                $("#tree_4").jstree({
                    'core': {
                        "themes" : {
                            "responsive": true,
                            'dots':false
                        },

                        "check_callback" : true,
                        'data': {{ tree | raw }}
                    },
                    "types": {
                        "default": {
                            "icon": "fa fa-folder icon-lg icon-state-success"
                        },
                        "file": {
                            "icon": "fa fa-folder icon-lg icon-state-success"
                        }
                    },
                    "state": {"key": "demo3"},
                    "plugins": ["contextmenu", "state", "types"],
                    "contextmenu": {
                        "items": function (node) {
                            return {
                                "Create": {
                                    "separator_before": false,
                                    "separator_after": false,
                                    "label": "Create Folder",
                                    "action": function (data) {
                                        var inst = $.jstree.reference(data.reference),
                                                obj = inst.create_node(data.reference);
                                        inst.edit(obj);
                                    }
                                },
                                "Rename": {
                                    "separator_before": false,
                                    "separator_after": false,
                                    "label": "Rename",
                                    "action": function (data) {
                                        var inst = $.jstree.reference(data.reference),
                                                obj = inst.get_node(data.reference);
                                        inst.edit(obj)
                                    }
                                },
                                "Remove": {
                                    "separator_before": false,
                                    "separator_after": false,
                                    "label": "Remove",
                                    "action": function (data) {
                                        var inst = $.jstree.reference(data.reference),
                                                obj = inst.get_node(data.reference);
                                        inst.delete_node(obj)
                                    }
                                }
                            };
                        }
                    }
                }).on("rename_node.jstree", function (e, data) {
                    $.ajax({
                        url: "{{ path('furniture_editnode') }}",
                        type: 'GET',
                        data: {
                            "name": data.text,
                            "id": data.node.id,
                            "old": data.node.old,
                            "parent": data.node.parent
                        },
                        success: function (result) {
                            $('#tree_4').jstree(true).refresh();
                            window.location = "{{ path('furniture') }}"

                        }
                    });
                }).on("delete_node.jstree", function (e, data) {
                    $.ajax({
                        url: "{{ path('furniture_deletenode') }}",
                        type: 'GET',
                        data: {
                            "id": data.node.id,
                            "parent": data.node.parent,
                        },
                        success: function (result) {
                            $('#tree_4').jstree(true).refresh();
                            window.location = "{{ path('furniture') }}"
                        }
                    });
                });
            }
            return {
                //main function to initiate the module
                init: function () {
                    //contextualMenu();
                    ajaxTree();
                }
            };
        }();
        UITree.init();

        $("#tree_4").bind("select_node.jstree", function(event, data) {
            $.ajax({
                url: "{{ path('furniture_tablecontent') }}",
                type: 'GET',
                data: {
                    "id": data.node.id,
                },
                success: function (result) {
                    $('#folder_name').parent('.caption').children(".info_extra").remove();
                    $("#table_result").html(result).ready(function(){
                        $('.actions').show();
                        $('body').find("#add_new_furniture").on('click',function(){
                            if (isNaN(data.node.id))
                               console.log('debe seleccionar una carpeta')
                            else
                                window.location = "{{ path('furniture') }}new/"+data.node.id

                        })
                        var TableManaged = function () {
                            var initTable1 = function () {

                                var table = $('#table_content');

                                // begin first table
                                table.dataTable({
                                    "columns": [{
                                        "orderable": false
                                    }, {
                                        "orderable": true
                                    }, {
                                        "orderable": true
                                    }, {
                                        "orderable": false
                                    }, {
                                        "orderable": false
                                    }],
                                    "lengthMenu": [
                                        [5, 25, 50, -1],
                                        [5, 25, 50, "All"] // change per page values here
                                    ],
                                    // set the initial value
                                    "pageLength": 5,
                                    "pagingType": "bootstrap_full_number",
                                    "language": {
                                        "lengthMenu": "  _MENU_ records",
                                        "paginate": {
                                            "previous": "Prev",
                                            "next": "Next",
                                            "last": "Last",
                                            "first": "First"
                                        }
                                    },
                                    "columnDefs": [{  // set default column settings
                                        'orderable': true,
                                        //'targets': [0]
                                    }, {
                                        "searchable": true,
                                        //"targets": [0]
                                    }],
                                    "order": [
                                        [1, "asc"]
                                    ] // set first column as a default sort by asc
                                });

                                var tableWrapper = jQuery('#table_result');

                                table.find('.group-checkable').change(function () {
                                    var set = jQuery(this).attr("data-set");
                                    var checked = jQuery(this).is(":checked");
                                    jQuery(set).each(function () {
                                        if (checked) {
                                            $(this).prop("checked", "checked");
                                            $(this).parents('tr').addClass("active");
                                        } else {
                                            $(this).prop("checked", "");
                                            $(this).parents('tr').removeClass("active");
                                        }
                                    });
                                });

                                table.on('change', 'tbody tr .checkboxes', function () {
                                    $(this).parents('tr').toggleClass("active");
                                });

                                tableWrapper.find('.dataTables_length select').addClass("form-control input-xsmall input-inline"); // modify table per page dropdown
                            }
                            return {
                                //main function to initiate the module
                                init: function () {
                                    if (!jQuery().dataTable) {
                                        return;
                                    }
                                    initTable1();
                                }
                            };

                        }();
                        TableManaged.init()
                        $(".dataTables_filter").addClass("pull-right").append('&nbsp;&nbsp;<a href="#modal_find" id="link_find_qr" data-toggle="modal"><i class=" fa fa-qrcode fa-lg" style="zoom:1.3; cursor: pointer; text-decoration: none;"></i></a>')
                        $('.dataTables_filter a#link_find_qr').bind('click', function(event, data){

                        })
                        $("#table_content_paginate").addClass("pull-right")
                        $("#folder_name").text(data.node.text)
                        $("#export").click(function(){
                            $.get("{{ path('furniture') }}"+'pdfjson/'+data.node.id, {}, function(response){

                                var y = 40;
                                var page = 1;
                                var pdf = new jsPDF();
                                pdf.setFont("helvetica");
                                var img = new Image();
                                //img.src = "../../img/tphlogo.jpg";
                                img.src = "https://log.towerleisure.nl/web/img/tphlogo.jpg";
                                pdf.addImage(img, 'jpg', 15, 10, 50, 9);
                                pdf.setFontSize(10);
                                pdf.setFontType('bold');
                                pdf.text(15, 25, response.header);
                                pdf.setFontType('italic');
                                pdf.text(160, 18, response.date);
                                pdf.text(160, 265, 'Page '+page + ' of ' +  response.pagetotal);
                                pdf.line(15, 28, 200, 28)
                                if (response.elements.length > 0){
                                    $('.alert-success').text("Generating document ...").show(300)
                                    setTimeout(function(){$('.alert-success').hide(300)}, 4400)
                                    response.elements.forEach(function(item, i){
                                        format = item.peacture.split('.')
                                        var img = new Image();
                                        if (format[1] == 'jpeg' || format[1] == 'png' || format[1] == 'jpg'){
                                            //img.src = "../../uploads/images/furniture/"+item.peacture;
                                            img.src = "https://log.towerleisure.nl/web/uploads/images/furniture/"+item.peacture;
                                            pdf.addImage(img, format[1], 15, y, 35, 30)
                                        }
                                        y += 3;
                                        pdf.setFontSize(12);
                                        pdf.setFontType('bold');
                                        pdf.text(55, y, item.name);
                                        pdf.setFontType('normal');
                                        pdf.setFontSize(10);
                                        pdf.text(55, y + 5, "Quantity: "+item.quantity);
                                        pdf.text(55, y + 10, "Price: €"+item.price);
                                        pdf.text(55, y + 15, "Total value: €"+item.totalvalue);
                                        pdf.text(55, y + 20, "Tags: "+item.tags);
                                        if (item.notes != "")
                                            pdf.text(55, y + 25, "Notes: "+item.notes);
                                        y += 37;
                                        if ((i + 1) % 5 == 0 && !(i + 1 == response.elements.length)){
                                            page ++;
                                            pdf.addPage()
                                            img.src = "https://log.towerleisure.nl/web/img/tphlogo.jpg";
                                            pdf.addImage(img, 'jpg', 15, 10, 50, 9);
                                            pdf.setFontSize(10);
                                            pdf.setFontType('bold');
                                            pdf.text(15, 25, response.header);
                                            pdf.setFontType('italic');
                                            pdf.text(160, 18, response.date);
                                            pdf.text(160, 265, 'Page '+page + ' of ' +  response.pagetotal);
                                            pdf.line(15, 28, 200, 28)
                                            y = 40;
                                        }
                                    })
                                    pdf.save( Math.random().toString(36).substr(2, 15) + ".pdf");
                                } else {
                                    $('.alert-danger').text("There is not elements ...").show(300)
                                    setTimeout(function(){$('.alert-danger').hide(300)}, 4400)

                                }
                            })

                        })
                    });
                }
            });
        });

    </script>


    <div id="modal_tree" class="modal fade" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                    <h4 class="modal-title">Select one folder</h4>
                </div>
                <div class="modal-body" style="overflow: hidden;">
                    <div id="tree_move_to" class="tree-demo"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button id="accept_move_to" type="button" class="btn blue-hoki"><i class="fa fa-check"></i> Move</button>
                </div>
            </div>
        </div>
    </div>


    <div id="modal_find" class="modal fade" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                    <h4 class="modal-title">Scan QR</h4>
                </div>
                <div class="modal-body" style="overflow: hidden;">
                    <div class="row" style="padding: 5px 20px;">
                        <label>Scan from WebCam:</label>
                        <div class="qrscanner" id="scanner">
                        </div>
                        <input type="hidden" id="qr_reader">
                        <br/>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript" src="{{ asset('js/qr/jsqrscanner.nocache.js')}}"></script>

    <script>
        $('#accept_move_to').click(function(response) {
            parent = $('#tree_move_to').find(".jstree-clicked").first().parent("li").attr('id')
            childrens = new Object()
            $('.checkboxes').each(function(index, val){
                if ($(val).is(':checked')){
                    childrens[index] = $(val).val()
                }
            })
            if (!isNaN(parent) ){
                $.post("{{ path("furniture_move") }}", {"parent": parent, 'childrens': childrens}, function(response){
                    window.location = "{{ path("furniture") }}"
                })
            }
            else {
                bootbox.dialog({
                    message: "You must select an item from the list and a folder",
                    title: "Information",
                    buttons: {
                        main: {
                            label: "Accept",
                            className: ""
                        }
                    }
                });

            }
        })

        var handleSample2 = function () {
            $('#tree_move_to').jstree({
                'plugins': ["checkbox", "types"],
                'core': {
                    "themes" : {
                        "responsive": true,
                        'dots':false
                    },
                    'data': {{ tree | raw }}
                },
                "types" : {
                    "default" : {
                        "icon" : "fa fa-folder icon-lg icon-state-success"
                    },
                }
            });
        }
        handleSample2();

        function updateFinder(obj){
            $('input[type="search"]').val(obj.val()).trigger('keyup')
            $('.close').trigger('click')
        }


        function onQRCodeScanned(scannedText)
        {
            var scannedTextMemo = document.getElementById("qr_reader");
            if(scannedTextMemo)
            {
                $('input[type="search"]').val(scannedText).trigger('keyup')
                $('.close').trigger('click')
                //scannedTextMemo.value = scannedText;
            }
        }

        //this function will be called when JsQRScanner is ready to use
        function JsQRScannerReady()
        {
            //create a new scanner passing to it a callback function that will be invoked when
            //the scanner succesfully scan a QR code
            var jbScanner = new JsQRScanner(onQRCodeScanned);
            //reduce the size of analyzed images to increase performance on mobile devices
            jbScanner.setSnapImageMaxSize(300);
            var scannerParentElement = document.getElementById("scanner");
            if(scannerParentElement)
            {
                //append the jbScanner to an existing DOM element
                jbScanner.appendTo(scannerParentElement);
            }
        }
    </script>

{% endblock %}
